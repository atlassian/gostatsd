name: ci

on:
  pull_request:
  push:

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.check_step.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get current branch
        id: check_step
        run: |
          if ${{ github.event_name == 'pull_request' }}
          then
            branch=${{ github.base_ref }}
          else
            raw=$(git branch -r --contains ${{ github.ref }})
            branch=${raw##*/}
          fi
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "Branch is $branch."

  build:
    needs: check # Wait for check step to finish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          # Go version needs to be the same in: CI config, README, Dockerfiles, and Makefile
          go-version: 1.19.7
      - name: Install Goveralls
        run: go get -v github.com/mattn/goveralls
      - name: Setup CI
        run: make setup-ci
      - name: Test
        run: |
          make check-fmt
          make build-all
          make check
          make test-race
          make bench-race
      - name: Non Tag
        if: github.ref_type != 'tag' || (needs.check.outputs.branch != 'master' && needs.check.outputs.branch != 'main' && needs.check.outputs.branch != 'release')
        run: |
          echo "Will not proceed to release job. Build does not meet requirement for release:"
          echo "Ref type '$GITHUB_REF_TYPE' must equal tag and branch '${{needs.check.outputs.branch}}' must be master, main or release."

  release:
    needs:
      - build
    if: github.ref_type == 'tag' && (needs.check.outputs.branch == 'master' || needs.check.outputs.branch == 'main' || needs.check.outputs.branch == 'release')
    runs-on: ubuntu-latest
    # minimal permissions for Get Artifact Publish Token
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
      # Get the token we need to publish to packages.atlassian.com
      - name: Get publish token
        id: publish-token
        uses: atlassian-labs/artifact-publish-token@v1.0.1
        with:
          output-modes: environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: 'amd64,arm64'
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Release
        run: |
          echo "Executing release on tag build $GITHUB_REF_NAME"
          ARCH=linux CPU_ARCH=amd64 make release-ci
          ARCH=linux CPU_ARCH=arm64 make release-ci
      - name: Push Docker Manifest
        run: |
          echo "Executing release-manifest on tag build $GITHUB_REF_NAME"
          make release-manifest-ci
